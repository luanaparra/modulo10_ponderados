openapi: 3.0.1
info:
  title: FastAPI Task Manager
  version: 1.0.0
  description: API for managing user authentication and task operations

servers:
  - url: http://localhost:8000
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        completed:
          type: boolean
          default: false
        owner_id:
          type: integer
          readOnly: true

    TaskCreate:
      type: object
      properties:
        title:
          type: string

    UserCreate:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

paths:
  /api/v1/token:
    post:
      summary: Authenticate user and return an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Access token created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: bearer
        401:
          description: Incorrect username or password

  /api/v1/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        200:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'

  /api/v1/login:
    post:
      summary: Login a user and set a JWT token in cookies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/tasks/:
    get:
      summary: Retrieve a list of tasks
      security:
        - bearerAuth: []
      parameters:
        - name: skip
          in: query
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
      responses:
        200:
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        200:
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /api/v1/tasks/{task_id}:
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task deleted successfully
        404:
          description: Task not found or not owned by the user

    put:
      summary: Mark a task as complete
      security:
        - bearerAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task marked as complete
        404:
          description: Task not found or not owned by the user